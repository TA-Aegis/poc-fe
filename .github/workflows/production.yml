name: Staging CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
    types: [closed]

env:
  PROJECT_NAME: ${{ github.event.repository.name }}
  PORT: 8080
  BRANCH: production
  VERSION: ${{ github.sha }}
  IMAGE_NAME: reyshazni/${{ github.event.repository.name }}-production:${{ github.sha }}

jobs:
  dockerize-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build the Docker image
        run: docker build --platform linux/amd64 -t ${{ env.IMAGE_NAME }} .

      - name: Push the Docker image
        run: docker push ${{ env.IMAGE_NAME }}

  deploy-to-server:
    runs-on: ubuntu-latest
    needs: dockerize-and-push
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Prepare deployment file
        run: |
          sed -i "s|<PROJECT_NAME>|${{ env.PROJECT_NAME }}|g" k8s/${{ env.BRANCH }}.yml
          sed -i "s|<IMAGE_NAME>|${{ env.IMAGE_NAME }}|g" k8s/${{ env.BRANCH }}.yml
          sed -i "s|<VERSION>|${{ env.VERSION }}|g" k8s/${{ env.BRANCH }}.yml
          sed -i "s|<PORT>|${{ env.PORT }}|g" k8s/${{ env.BRANCH }}.yml
          cat k8s/${{ env.BRANCH }}.yml

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ vars.DO_PAK }}

      - name: Apply changes
        run: |
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ vars.DO_CLUSTER_NAME }}
          kubectl apply -f k8s/${{ env.BRANCH }}.yml